---
# tasks file for ansible-role-wordpress

- name: Mettre à jour le système
  ansible.builtin.package:
    name: "*"
    state: latest
  become: true

- name: Installer paquets requis pour WordPress (Debian/Ubuntu)
  apt:
    name:
      - apache2
      - php
      - libapache2-mod-php
      - php-mysql
      - mariadb-server
      - wget
      - unzip
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  become: true

- name: Installer paquets requis pour WordPress (RedHat/Rocky)
  dnf:
    name:
      - httpd
      - php
      - php-mysqlnd
      - mariadb-server
      - wget
      - unzip
    state: present
    update_cache: yes
  when: ansible_os_family == "RedHat"
  become: true

- name: Supprimer la page par défaut d’Apache
  ansible.builtin.file:
    path: /var/www/html/index.html
    state: absent
  become: true

- name: Démarrer Apache (Debian)
  ansible.builtin.service:
    name: apache2
    state: started
    enabled: yes
  when: ansible_os_family == "Debian"
  become: true

- name: Démarrer Apache sur Rocky (pas de systemd)
  ansible.builtin.shell: /usr/sbin/httpd -DFOREGROUND &
  args:
    executable: /bin/bash
  async: 3600
  poll: 0
  when: ansible_os_family == "RedHat"
  become: true

- name: Installer binding Python MySQL sur Debian/Ubuntu
  ansible.builtin.apt:
    name:
      - python3-pymysql
    state: present
    update_cache: true
  when: ansible_os_family == "Debian"
  become: true

- name: Installer pip3 sur Rocky/RedHat
  ansible.builtin.package:
    name: python3-pip
    state: present
  when: ansible_os_family == "RedHat"
  become: true

- name: Installer PyMySQL via pip (RedHat/Rocky)
  ansible.builtin.pip:
    name: PyMySQL
    executable: pip3
  when: ansible_os_family == "RedHat"
  become: true

- name: Démarrer MariaDB (Debian/Ubuntu)
  ansible.builtin.service:
    name: mariadb
    state: started
  when: ansible_os_family == "Debian"
  become: true

- name: Démarrer MariaDB sur Rocky (pas de systemd)
  ansible.builtin.shell: mysqld_safe --datadir=/var/lib/mysql &
  args:
    executable: /bin/bash
  async: 3600
  poll: 0
  when: ansible_os_family == "RedHat"
  become: true

- name: Pause for MariaDB to initialize
  ansible.builtin.pause:
    seconds: 10

- name: Attendre que MariaDB écoute sur 127.0.0.1:3306 (Debian/Ubuntu)
  ansible.builtin.wait_for:
    host: 127.0.0.1
    port: 3306
    timeout: 60
  when: ansible_os_family == "Debian"
  become: true

- name: Attendre que la socket MariaDB soit créée (RedHat/Rocky)
  ansible.builtin.wait_for:
    path: /run/mysqld/mysqld.sock
    state: present
    timeout: 60
  when: ansible_os_family == "RedHat"
  become: true

- name: Sécuriser MariaDB (mot de passe root + grants)
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ db_root_password }}"
    name: root
    host: localhost
    password: "{{ db_root_password }}"
    priv: "*.*:ALL,GRANT"
    state: present
  become: true

- name: Créer la base de données WordPress
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ db_root_password }}"
    name: "{{ db_name }}"
    state: present
  become: true

- name: Créer l’utilisateur WordPress
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ db_root_password }}"
    name: "{{ db_user }}"
    password: "{{ db_user_password }}"
    priv: "{{ db_name }}.*:ALL"
    state: present
  become: true

- name: Télécharger WordPress depuis l’archive officielle
  ansible.builtin.get_url:
    url: https://wordpress.org/latest.tar.gz
    dest: /tmp/latest.tar.gz
    mode: '0644'
  become: true

- name: Décompresser WordPress
  ansible.builtin.unarchive:
    src: /tmp/latest.tar.gz
    dest: "{{ wordpress_web_dir }}"
    copy: no
  become: true

- name: Changer propriétaire des fichiers WordPress
  ansible.builtin.file:
    path: "{{ wordpress_web_dir }}"
    recurse: yes
    owner: www-data
    group: www-data
  become: true

- name: Déployer la configuration Apache pour WordPress
  ansible.builtin.template:
    src: wordpress.conf.j2
    dest: "{{ apache_conf_path }}"
  notify: Reload Apache
  become: true


- name: Activer site WordPress et mod_rewrite (Debian)
  ansible.builtin.command: a2ensite wordpress.conf && a2enmod rewrite
  args:
    warn: false
  when: ansible_os_family == "Debian"
  notify: Reload Apache
  become: true

